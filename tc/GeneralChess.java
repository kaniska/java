package tc;

import java.util.ArrayList;
import java.util.List;

public class GeneralChess {
  final static int dx[] = new int[]{-2, -2, -1, -1, 1, 1, 2, 2};
  final static int dy[] = new int[]{-1, 1, -2, 2, -2, 2, -1, 1};

  public String[] attackPositions(String[] pieces) {
    int n = pieces.length;
    int x[] = new int[n], y[] = new int[n];
    for (int i = 0; i < n; i++) {
      String s[] = pieces[i].split(",");
      x[i] = Integer.parseInt(s[0]);
      y[i] = Integer.parseInt(s[1]);
    }

    List<String> res = new ArrayList<String>();
    for (int i = 0; i < 8; i++) {
      int mx = x[0] + dx[i];
      int my = y[0] + dy[i];
      boolean ok = true;
      for (int j = 1; j < n; j++) {
        if (((x[j] - mx) * (x[j] - mx) + (y[j] - my) * (y[j] - my)) != 5) ok = false;
      }
      if (ok) res.add(mx + "," + my);
    }
    return res.toArray(new String[0]);
  }

  // BEGIN KAWIGIEDIT TESTING
  // Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
  private static boolean KawigiEdit_RunTest(int testNum, String[] p0, boolean hasAnswer, String[] p1) {
    System.out.print("Test " + testNum + ": [" + "{");
    for (int i = 0; p0.length > i; ++i) {
      if (i > 0) {
        System.out.print(",");
      }
      System.out.print("\"" + p0[i] + "\"");
    }
    System.out.print("}");
    System.out.println("]");
    GeneralChess obj;
    String[] answer;
    obj = new GeneralChess();
    long startTime = System.currentTimeMillis();
    answer = obj.attackPositions(p0);
    long endTime = System.currentTimeMillis();
    boolean res;
    res = true;
    System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
    if (hasAnswer) {
      System.out.println("Desired answer:");
      System.out.print("\t" + "{");
      for (int i = 0; p1.length > i; ++i) {
        if (i > 0) {
          System.out.print(",");
        }
        System.out.print("\"" + p1[i] + "\"");
      }
      System.out.println("}");
    }
    System.out.println("Your answer:");
    System.out.print("\t" + "{");
    for (int i = 0; answer.length > i; ++i) {
      if (i > 0) {
        System.out.print(",");
      }
      System.out.print("\"" + answer[i] + "\"");
    }
    System.out.println("}");
    if (hasAnswer) {
      if (answer.length != p1.length) {
        res = false;
      } else {
        for (int i = 0; answer.length > i; ++i) {
          if (!answer[i].equals(p1[i])) {
            res = false;
          }
        }
      }
    }
    if (!res) {
      System.out.println("DOESN'T MATCH!!!!");
    } else if ((endTime - startTime) / 1000.0 >= 2) {
      System.out.println("FAIL the timeout");
      res = false;
    } else if (hasAnswer) {
      System.out.println("Match :-)");
    } else {
      System.out.println("OK, but is it right?");
    }
    System.out.println("");
    return res;
  }

  public static void main(String[] args) {
    boolean all_right;
    all_right = true;

    String[] p0;
    String[] p1;

    // ----- test 0 -----
    p0 = new String[]{"0,0"};
    p1 = new String[]{"-2,-1", "-2,1", "-1,-2", "-1,2", "1,-2", "1,2", "2,-1", "2,1"};
    all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
    // ------------------

    // ----- test 1 -----
    p0 = new String[]{"2,1", "-1,-2"};
    p1 = new String[]{"0,0", "1,-1"};
    all_right = KawigiEdit_RunTest(1, p0, true, p1) && all_right;
    // ------------------

    // ----- test 2 -----
    p0 = new String[]{"0,0", "2,1"};
    p1 = new String[]{};
    all_right = KawigiEdit_RunTest(2, p0, true, p1) && all_right;
    // ------------------

    // ----- test 3 -----
    p0 = new String[]{"-1000,1000", "-999,999", "-999,997"};
    p1 = new String[]{"-1001,998"};
    all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
    // ------------------

    if (all_right) {
      System.out.println("You're a stud (at least on the example cases)!");
    } else {
      System.out.println("Some of the test cases had errors.");
    }
  }
  // END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
