package topcoder;

import java.util.*;

public class BadNeighbors
{
	public int maxDonations(int[] donations)
	{
    int n = donations.length;
    int max0[] = new int[n], max1[]=new int[n];
    Arrays.fill(max0, 0); Arrays.fill(max1, 0);
    max0[0]=donations[0];
    max1[1]= donations[1];
		for (int i=1; i<n-1; i++) {  //max0
      if (i-2<0) { max0[i] = donations[i]; }
      else for (int j=0;j<=i-2; j++) {
        max0[i] = Math.max(max0[i], max0[j]+donations[i]);
      }
    }
    for (int i=2; i<n; i++) {  //max1
      if (i-2<1) { max1[i] = donations[i]; }
      else for (int j=0;j<=i-2; j++) {
        max1[i] = Math.max(max1[i], max1[j]+donations[i]);
      }
    }
    return Math.max(max0[n-2], max1[n-1]);
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, int[] p0, boolean hasAnswer, int p1) {
		System.out.print("Test " + testNum + ": [" + "{");
		for (int i = 0; p0.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p0[i]);
		}
		System.out.print("}");
		System.out.println("]");
		BadNeighbors obj;
		int answer;
		obj = new BadNeighbors();
		long startTime = System.currentTimeMillis();
		answer = obj.maxDonations(p0);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p1);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = answer == p1;
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		int[] p0;
		int p1;
		
		// ----- test 0 -----
		p0 = new int[]{10,3,2,5,7,8};
		p1 = 19;
		all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = new int[]{11,15};
		p1 = 15;
		all_right = KawigiEdit_RunTest(1, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = new int[]{7,7,7,7,7,7,7};
		p1 = 21;
		all_right = KawigiEdit_RunTest(2, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = new int[]{1,2,3,4,5,1,2,3,4,5};
		p1 = 16;
		all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 4 -----
		p0 = new int[]{94,40,49,65,21,21,106,80,92,81,679,4,61,6,237,12,72,74,29,95,265,35,47,1,61,397,52,72,37,51,1,81,45,435,7,36,57,86,81,72};
		p1 = 2926;
		all_right = KawigiEdit_RunTest(4, p0, true, p1) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
