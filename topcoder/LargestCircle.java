package topcoder;

import static java.lang.Math.*;

public class LargestCircle
{
  boolean[][] marked;
	public int radius(String[] grid)
	{
    int height = grid.length;
    int width = grid[0].length();
    if (height==1 || width==1) return 0;
    marked = new boolean[height][width];
    for (int i=0;i<height;i++) {
      for (int j=0;j<width;j++) {
        marked[i][j] = grid[i].charAt(j)=='#';
      }
    }
    int count =0;
    for (int i=1;i<height;i++) {
      for (int j=1;j<width;j++) {
        int max = min(min(j, width-j), min(i,height-i));
         for (int r=1;r<=max;r++) {
           if (isUnmarked(i, j, r)) count++;
         }
      }
    }
    return count;
	}

  boolean isUnmarked(int i, int j, int r) {
    if (i==2 &&j==2 && r==1) {
      int a=1;
    }

    double ny1 = i, ny2=i;
    int ystart, yend;
    for (int x=-(r-1);x<=r;x++) {
      double dy = sqrt(r*r-x*x);
      ystart = (int)ceil(ny1);
      yend = (int) floor(ny1-dy);
      for (int k=yend;k<ystart;k++) {
        if (marked[k][j+x-1]) {
          return false;
        }
      }
      ny1 -=dy;
      ystart = (int)floor(ny2);
      yend = (int) ceil(ny2+dy);
      for (int k=ystart;k<yend;k++) {
        if (marked[k][j+x-1]) {
          return false;
        }
      }
      ny2+=dy;

    }
    return true;
  }
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, String[] p0, boolean hasAnswer, int p1) {
		System.out.print("Test " + testNum + ": [" + "{");
		for (int i = 0; p0.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print("\"" + p0[i] + "\"");
		}
		System.out.print("}");
		System.out.println("]");
		LargestCircle obj;
		int answer;
		obj = new LargestCircle();
		long startTime = System.currentTimeMillis();
		answer = obj.radius(p0);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p1);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = answer == p1;
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		String[] p0;
		int p1;
		
		// ----- test 0 -----
		p0 = new String[]{"####","#..#","#..#","####"};
		p1 = 1;
		all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = new String[]{"############","###......###","##.######.##","#.########.#","#.##..####.#","#.##..####.#","#.########.#","#.########.#","#.########.#","##.######.##","###......###","############"};
		p1 = 5;
		all_right = KawigiEdit_RunTest(1, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = new String[]{".........."};
		p1 = 0;
		all_right = KawigiEdit_RunTest(2, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = new String[]{"#######","#######","#######","#######","#######"};
		p1 = 0;
		all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 4 -----
		p0 = new String[]{"#####.......","#####.......","#####.......","............","............","............","............","............","............","............"};
		p1 = 4;
		all_right = KawigiEdit_RunTest(4, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 5 -----
		p0 = new String[]{"#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.","...#...#...#...#...#...#...#...#...#...#...#...#..","#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.",".#...#...#...#...#...#...#...#...#...#...#...#...#","#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.","...#...#...#...#...#...#...#...#...#...#...#...#..","#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.",".#...#...#...#...#...#...#...#...#...#...#...#...#","#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.","...#...#...#...#...#...#...#...#...#...#...#...#.#","#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#."};
		p1 = 0;
		all_right = KawigiEdit_RunTest(5, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 6 -----
		p0 = new String[]{
				
				};
		p1 = 24;
		all_right = KawigiEdit_RunTest(6, p0, true, p1) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
